on: [push]

name: CI

jobs:
  one:
    runs-on: ubuntu-16.04
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
  build_and_test:
    name: Rust project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            bin: git-workspace
            name: git-workspace-Linux-x86_64.tar.gz
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            bin: git-workspace.exe
            name: git-workspace-Windows-x86_64.zip
          - os: macOS-latest
            rust: stable
            target: x86_64-apple-darwin
            bin: git-workspace
            name: git-workspace-Darwin-x86_64.tar.gz
    env:
      GIT_WORKSPACE: /github/workspace/git-workspace/
    steps:
      - uses: actions/checkout@master
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: add gitlab user tom6
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: update
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          strip target/${{ matrix.target }}/release/${{ matrix.bin }}
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
          7z a ../../../${{ matrix.name }} ${{ matrix.bin }}
          else
          tar czvf ../../../${{ matrix.name }} ${{ matrix.bin }}
          fi
          cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: 'git-workspace*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
